"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .securitygroupruleprotocol import SecurityGroupRuleProtocol
from lambda_cloud_sdk.types import BaseModel
from typing import List, Optional
from typing_extensions import NotRequired, TypedDict


class FirewallRuleTypedDict(TypedDict):
    protocol: SecurityGroupRuleProtocol
    source_network: str
    r"""The set of source IPv4 addresses from which you want to allow inbound
    traffic. These addresses must be specified in CIDR notation. You can
    specify individual public IPv4 CIDR blocks such as `1.2.3.4` or
    `1.2.3.4/32`, or you can specify `0.0.0.0/0` to allow access from any
    address.

    This value is a string consisting of a public IPv4 address optionally
    followed by a slash (/) and an integer mask (the network prefix).
    If no mask is provided, the API assumes `/32` by default.
    """
    description: str
    r"""A human-readable description of the rule."""
    port_range: NotRequired[List[int]]
    r"""An inclusive range of network ports specified as `[min, max]`.
    Not allowed for the `icmp` protocol but required for the others.

    To specify a single port, list it twice (for example, `[22,22]`).
    """


class FirewallRule(BaseModel):
    protocol: SecurityGroupRuleProtocol

    source_network: str
    r"""The set of source IPv4 addresses from which you want to allow inbound
    traffic. These addresses must be specified in CIDR notation. You can
    specify individual public IPv4 CIDR blocks such as `1.2.3.4` or
    `1.2.3.4/32`, or you can specify `0.0.0.0/0` to allow access from any
    address.

    This value is a string consisting of a public IPv4 address optionally
    followed by a slash (/) and an integer mask (the network prefix).
    If no mask is provided, the API assumes `/32` by default.
    """

    description: str
    r"""A human-readable description of the rule."""

    port_range: Optional[List[int]] = None
    r"""An inclusive range of network ports specified as `[min, max]`.
    Not allowed for the `icmp` protocol but required for the others.

    To specify a single port, list it twice (for example, `[22,22]`).
    """
