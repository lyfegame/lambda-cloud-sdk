"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .apierroraccountinactive import (
    APIErrorAccountInactive,
    APIErrorAccountInactiveTypedDict,
)
from .apierrorduplicate import APIErrorDuplicate, APIErrorDuplicateTypedDict
from .apierrorinvalidbillingaddress import (
    APIErrorInvalidBillingAddress,
    APIErrorInvalidBillingAddressTypedDict,
)
from .apierrorquotaexceeded import APIErrorQuotaExceeded, APIErrorQuotaExceededTypedDict
from .apierrorunauthorized import APIErrorUnauthorized
from .filesystem import Filesystem, FilesystemTypedDict
from .schemebasicauth import SchemeBasicAuth, SchemeBasicAuthTypedDict
from lambda_cloud_sdk import utils
from lambda_cloud_sdk.types import BaseModel
from lambda_cloud_sdk.utils import FieldMetadata, SecurityMetadata
from typing import Optional, Union
from typing_extensions import Annotated, NotRequired, TypeAliasType, TypedDict


class CreateFilesystemSecurityTypedDict(TypedDict):
    basic_auth: NotRequired[SchemeBasicAuthTypedDict]
    bearer_auth: NotRequired[str]


class CreateFilesystemSecurity(BaseModel):
    basic_auth: Annotated[
        Optional[SchemeBasicAuth],
        FieldMetadata(
            security=SecurityMetadata(scheme=True, scheme_type="http", sub_type="basic")
        ),
    ] = None

    bearer_auth: Annotated[
        Optional[str],
        FieldMetadata(
            security=SecurityMetadata(
                scheme=True,
                scheme_type="http",
                sub_type="bearer",
                field_name="Authorization",
            )
        ),
    ] = None


CreateFilesystemResponseTypedDict = TypeAliasType(
    "CreateFilesystemResponseTypedDict",
    Union[APIErrorAccountInactiveTypedDict, APIErrorInvalidBillingAddressTypedDict],
)


CreateFilesystemResponse = TypeAliasType(
    "CreateFilesystemResponse",
    Union[APIErrorAccountInactive, APIErrorInvalidBillingAddress],
)


class CreateFilesystemFilesystemsResponseResponseBodyData(BaseModel):
    error: CreateFilesystemResponse


class CreateFilesystemFilesystemsResponseResponseBody(Exception):
    r"""Forbidden"""

    data: CreateFilesystemFilesystemsResponseResponseBodyData

    def __init__(self, data: CreateFilesystemFilesystemsResponseResponseBodyData):
        self.data = data

    def __str__(self) -> str:
        return utils.marshal_json(
            self.data, CreateFilesystemFilesystemsResponseResponseBodyData
        )


class CreateFilesystemFilesystemsResponseBodyData(BaseModel):
    error: APIErrorUnauthorized


class CreateFilesystemFilesystemsResponseBody(Exception):
    r"""Unauthorized"""

    data: CreateFilesystemFilesystemsResponseBodyData

    def __init__(self, data: CreateFilesystemFilesystemsResponseBodyData):
        self.data = data

    def __str__(self) -> str:
        return utils.marshal_json(
            self.data, CreateFilesystemFilesystemsResponseBodyData
        )


CreateFilesystemFilesystemsResponseTypedDict = TypeAliasType(
    "CreateFilesystemFilesystemsResponseTypedDict",
    Union[APIErrorDuplicateTypedDict, APIErrorQuotaExceededTypedDict],
)


CreateFilesystemFilesystemsResponse = TypeAliasType(
    "CreateFilesystemFilesystemsResponse",
    Union[APIErrorDuplicate, APIErrorQuotaExceeded],
)


class CreateFilesystemFilesystemsResponse400ResponseBodyData(BaseModel):
    error: CreateFilesystemFilesystemsResponse


class CreateFilesystemFilesystemsResponse400ResponseBody(Exception):
    r"""Bad Request"""

    data: CreateFilesystemFilesystemsResponse400ResponseBodyData

    def __init__(self, data: CreateFilesystemFilesystemsResponse400ResponseBodyData):
        self.data = data

    def __str__(self) -> str:
        return utils.marshal_json(
            self.data, CreateFilesystemFilesystemsResponse400ResponseBodyData
        )


class CreateFilesystemResponseBodyTypedDict(TypedDict):
    r"""OK"""

    data: FilesystemTypedDict
    r"""Information about a shared filesystem."""


class CreateFilesystemResponseBody(BaseModel):
    r"""OK"""

    data: Filesystem
    r"""Information about a shared filesystem."""
