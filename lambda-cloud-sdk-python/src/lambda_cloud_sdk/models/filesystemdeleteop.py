"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .apierroraccountinactive import APIErrorAccountInactive
from .apierrorfilesysteminuse import APIErrorFilesystemInUse
from .apierrorfilesystemnotfound import APIErrorFilesystemNotFound
from .apierrorunauthorized import APIErrorUnauthorized
from .filesystemdeleteresponse import (
    FilesystemDeleteResponse,
    FilesystemDeleteResponseTypedDict,
)
from .schemebasicauth import SchemeBasicAuth, SchemeBasicAuthTypedDict
from lambda_cloud_sdk import utils
from lambda_cloud_sdk.types import BaseModel
from lambda_cloud_sdk.utils import FieldMetadata, PathParamMetadata, SecurityMetadata
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class FilesystemDeleteSecurityTypedDict(TypedDict):
    basic_auth: NotRequired[SchemeBasicAuthTypedDict]
    bearer_auth: NotRequired[str]


class FilesystemDeleteSecurity(BaseModel):
    basic_auth: Annotated[
        Optional[SchemeBasicAuth],
        FieldMetadata(
            security=SecurityMetadata(scheme=True, scheme_type="http", sub_type="basic")
        ),
    ] = None

    bearer_auth: Annotated[
        Optional[str],
        FieldMetadata(
            security=SecurityMetadata(
                scheme=True,
                scheme_type="http",
                sub_type="bearer",
                field_name="Authorization",
            )
        ),
    ] = None


class FilesystemDeleteRequestTypedDict(TypedDict):
    id: str


class FilesystemDeleteRequest(BaseModel):
    id: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]


class FilesystemDeleteFilesystemsResponse404ResponseBodyData(BaseModel):
    error: APIErrorFilesystemNotFound


class FilesystemDeleteFilesystemsResponse404ResponseBody(Exception):
    r"""Not Found"""

    data: FilesystemDeleteFilesystemsResponse404ResponseBodyData

    def __init__(self, data: FilesystemDeleteFilesystemsResponse404ResponseBodyData):
        self.data = data

    def __str__(self) -> str:
        return utils.marshal_json(
            self.data, FilesystemDeleteFilesystemsResponse404ResponseBodyData
        )


class FilesystemDeleteFilesystemsResponseResponseBodyData(BaseModel):
    error: APIErrorAccountInactive


class FilesystemDeleteFilesystemsResponseResponseBody(Exception):
    r"""Forbidden"""

    data: FilesystemDeleteFilesystemsResponseResponseBodyData

    def __init__(self, data: FilesystemDeleteFilesystemsResponseResponseBodyData):
        self.data = data

    def __str__(self) -> str:
        return utils.marshal_json(
            self.data, FilesystemDeleteFilesystemsResponseResponseBodyData
        )


class FilesystemDeleteFilesystemsResponseBodyData(BaseModel):
    error: APIErrorUnauthorized


class FilesystemDeleteFilesystemsResponseBody(Exception):
    r"""Unauthorized"""

    data: FilesystemDeleteFilesystemsResponseBodyData

    def __init__(self, data: FilesystemDeleteFilesystemsResponseBodyData):
        self.data = data

    def __str__(self) -> str:
        return utils.marshal_json(
            self.data, FilesystemDeleteFilesystemsResponseBodyData
        )


class FilesystemDeleteFilesystemsResponse400ResponseBodyData(BaseModel):
    error: APIErrorFilesystemInUse


class FilesystemDeleteFilesystemsResponse400ResponseBody(Exception):
    r"""Bad Request"""

    data: FilesystemDeleteFilesystemsResponse400ResponseBodyData

    def __init__(self, data: FilesystemDeleteFilesystemsResponse400ResponseBodyData):
        self.data = data

    def __str__(self) -> str:
        return utils.marshal_json(
            self.data, FilesystemDeleteFilesystemsResponse400ResponseBodyData
        )


class FilesystemDeleteResponseBodyTypedDict(TypedDict):
    r"""OK"""

    data: FilesystemDeleteResponseTypedDict


class FilesystemDeleteResponseBody(BaseModel):
    r"""OK"""

    data: FilesystemDeleteResponse
