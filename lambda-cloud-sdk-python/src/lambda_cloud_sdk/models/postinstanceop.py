"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .apierroraccountinactive import APIErrorAccountInactive
from .apierrorinstancenotfound import APIErrorInstanceNotFound
from .apierrorinvalidparameters import APIErrorInvalidParameters
from .apierrorunauthorized import APIErrorUnauthorized
from .instance import Instance, InstanceTypedDict
from .instancemodificationrequest import (
    InstanceModificationRequest,
    InstanceModificationRequestTypedDict,
)
from .schemebasicauth import SchemeBasicAuth, SchemeBasicAuthTypedDict
from lambda_cloud_sdk import utils
from lambda_cloud_sdk.types import BaseModel
from lambda_cloud_sdk.utils import (
    FieldMetadata,
    PathParamMetadata,
    RequestMetadata,
    SecurityMetadata,
)
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class PostInstanceSecurityTypedDict(TypedDict):
    basic_auth: NotRequired[SchemeBasicAuthTypedDict]
    bearer_auth: NotRequired[str]


class PostInstanceSecurity(BaseModel):
    basic_auth: Annotated[
        Optional[SchemeBasicAuth],
        FieldMetadata(
            security=SecurityMetadata(scheme=True, scheme_type="http", sub_type="basic")
        ),
    ] = None

    bearer_auth: Annotated[
        Optional[str],
        FieldMetadata(
            security=SecurityMetadata(
                scheme=True,
                scheme_type="http",
                sub_type="bearer",
                field_name="Authorization",
            )
        ),
    ] = None


class PostInstanceRequestTypedDict(TypedDict):
    id: str
    r"""The unique identifier (ID) of the instance"""
    instance_modification_request: InstanceModificationRequestTypedDict


class PostInstanceRequest(BaseModel):
    id: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""The unique identifier (ID) of the instance"""

    instance_modification_request: Annotated[
        InstanceModificationRequest,
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ]


class PostInstanceInstancesResponse404ResponseBodyData(BaseModel):
    error: APIErrorInstanceNotFound


class PostInstanceInstancesResponse404ResponseBody(Exception):
    r"""Not Found"""

    data: PostInstanceInstancesResponse404ResponseBodyData

    def __init__(self, data: PostInstanceInstancesResponse404ResponseBodyData):
        self.data = data

    def __str__(self) -> str:
        return utils.marshal_json(
            self.data, PostInstanceInstancesResponse404ResponseBodyData
        )


class PostInstanceInstancesResponseResponseBodyData(BaseModel):
    error: APIErrorAccountInactive


class PostInstanceInstancesResponseResponseBody(Exception):
    r"""Forbidden"""

    data: PostInstanceInstancesResponseResponseBodyData

    def __init__(self, data: PostInstanceInstancesResponseResponseBodyData):
        self.data = data

    def __str__(self) -> str:
        return utils.marshal_json(
            self.data, PostInstanceInstancesResponseResponseBodyData
        )


class PostInstanceInstancesResponseBodyData(BaseModel):
    error: APIErrorUnauthorized


class PostInstanceInstancesResponseBody(Exception):
    r"""Unauthorized"""

    data: PostInstanceInstancesResponseBodyData

    def __init__(self, data: PostInstanceInstancesResponseBodyData):
        self.data = data

    def __str__(self) -> str:
        return utils.marshal_json(self.data, PostInstanceInstancesResponseBodyData)


class PostInstanceInstancesResponse400ResponseBodyData(BaseModel):
    error: APIErrorInvalidParameters


class PostInstanceInstancesResponse400ResponseBody(Exception):
    r"""Bad Request"""

    data: PostInstanceInstancesResponse400ResponseBodyData

    def __init__(self, data: PostInstanceInstancesResponse400ResponseBodyData):
        self.data = data

    def __str__(self) -> str:
        return utils.marshal_json(
            self.data, PostInstanceInstancesResponse400ResponseBodyData
        )


class PostInstanceResponseBodyTypedDict(TypedDict):
    r"""OK"""

    data: InstanceTypedDict
    r"""Detailed information about the instance."""


class PostInstanceResponseBody(BaseModel):
    r"""OK"""

    data: Instance
    r"""Detailed information about the instance."""
