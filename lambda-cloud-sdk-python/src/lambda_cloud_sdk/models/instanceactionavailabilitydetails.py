"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .instanceactionunavailablecode import InstanceActionUnavailableCode
from lambda_cloud_sdk.types import BaseModel
from typing import Optional, Union
from typing_extensions import NotRequired, TypeAliasType, TypedDict


ReasonCodeTypedDict = TypeAliasType(
    "ReasonCodeTypedDict", Union[InstanceActionUnavailableCode, str]
)
r"""A code representing the instance state that is blocking the operation. Only provided if the operation is blocked."""


ReasonCode = TypeAliasType("ReasonCode", Union[InstanceActionUnavailableCode, str])
r"""A code representing the instance state that is blocking the operation. Only provided if the operation is blocked."""


class InstanceActionAvailabilityDetailsTypedDict(TypedDict):
    available: bool
    r"""If set, indicates that the relevant operation can be performed on the instance in its current state."""
    reason_code: NotRequired[ReasonCodeTypedDict]
    r"""A code representing the instance state that is blocking the operation. Only provided if the operation is blocked."""
    reason_description: NotRequired[str]
    r"""A longer description of why this operation is currently blocked. Only provided if the operation is blocked."""


class InstanceActionAvailabilityDetails(BaseModel):
    available: bool
    r"""If set, indicates that the relevant operation can be performed on the instance in its current state."""

    reason_code: Optional[ReasonCode] = None
    r"""A code representing the instance state that is blocking the operation. Only provided if the operation is blocked."""

    reason_description: Optional[str] = None
    r"""A longer description of why this operation is currently blocked. Only provided if the operation is blocked."""
